// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: comdex/loan/v1beta1/tx.proto

package types

import (
	context "context"
	fmt "fmt"
	github_com_cosmos_cosmos_sdk_types "github.com/cosmos/cosmos-sdk/types"
	_ "github.com/gogo/protobuf/gogoproto"
	grpc1 "github.com/gogo/protobuf/grpc"
	proto "github.com/gogo/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type MsgCreateRequest struct {
	From         string                                 `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty" yaml:"from"`
	AppId        uint64                                 `protobuf:"varint,2,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty" yaml:"app_id"`
	PairId       uint64                                 `protobuf:"varint,3,opt,name=pair_id,json=pairId,proto3" json:"pair_id,omitempty" yaml:"pair_id"`
	AmountIn     github_com_cosmos_cosmos_sdk_types.Int `protobuf:"bytes,4,opt,name=amount_in,json=amountIn,proto3,customtype=github.com/cosmos/cosmos-sdk/types.Int" json:"amount_in" yaml:"amount_in"`
	AmountOut    github_com_cosmos_cosmos_sdk_types.Int `protobuf:"bytes,5,opt,name=amount_out,json=amountOut,proto3,customtype=github.com/cosmos/cosmos-sdk/types.Int" json:"amount_out" yaml:"amount_out"`
	Fee          github_com_cosmos_cosmos_sdk_types.Int `protobuf:"bytes,6,opt,name=fee,proto3,customtype=github.com/cosmos/cosmos-sdk/types.Int" json:"fee" yaml:"fee"`
	DurationDays int64                                  `protobuf:"varint,7,opt,name=duration_days,json=durationDays,proto3" json:"duration_days,omitempty" yaml:"duration_days"`
}

func (m *MsgCreateRequest) Reset()         { *m = MsgCreateRequest{} }
func (m *MsgCreateRequest) String() string { return proto.CompactTextString(m) }
func (*MsgCreateRequest) ProtoMessage()    {}
func (*MsgCreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e036425a4859ea3e, []int{0}
}
func (m *MsgCreateRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateRequest.Merge(m, src)
}
func (m *MsgCreateRequest) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateRequest proto.InternalMessageInfo

func (m *MsgCreateRequest) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *MsgCreateRequest) GetAppId() uint64 {
	if m != nil {
		return m.AppId
	}
	return 0
}

func (m *MsgCreateRequest) GetPairId() uint64 {
	if m != nil {
		return m.PairId
	}
	return 0
}

func (m *MsgCreateRequest) GetDurationDays() int64 {
	if m != nil {
		return m.DurationDays
	}
	return 0
}

type MsgCreateResponse struct {
}

func (m *MsgCreateResponse) Reset()         { *m = MsgCreateResponse{} }
func (m *MsgCreateResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateResponse) ProtoMessage()    {}
func (*MsgCreateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e036425a4859ea3e, []int{1}
}
func (m *MsgCreateResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateResponse.Merge(m, src)
}
func (m *MsgCreateResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateResponse proto.InternalMessageInfo

type MsgApproveRequest struct {
	From   string `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty" yaml:"from"`
	LoanId uint64 `protobuf:"varint,2,opt,name=loan_id,json=loanId,proto3" json:"loan_id,omitempty" yaml:"loan_id"`
}

func (m *MsgApproveRequest) Reset()         { *m = MsgApproveRequest{} }
func (m *MsgApproveRequest) String() string { return proto.CompactTextString(m) }
func (*MsgApproveRequest) ProtoMessage()    {}
func (*MsgApproveRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e036425a4859ea3e, []int{2}
}
func (m *MsgApproveRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgApproveRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgApproveRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgApproveRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgApproveRequest.Merge(m, src)
}
func (m *MsgApproveRequest) XXX_Size() int {
	return m.Size()
}
func (m *MsgApproveRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgApproveRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MsgApproveRequest proto.InternalMessageInfo

func (m *MsgApproveRequest) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *MsgApproveRequest) GetLoanId() uint64 {
	if m != nil {
		return m.LoanId
	}
	return 0
}

type MsgApproveResponse struct {
}

func (m *MsgApproveResponse) Reset()         { *m = MsgApproveResponse{} }
func (m *MsgApproveResponse) String() string { return proto.CompactTextString(m) }
func (*MsgApproveResponse) ProtoMessage()    {}
func (*MsgApproveResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e036425a4859ea3e, []int{3}
}
func (m *MsgApproveResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgApproveResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgApproveResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgApproveResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgApproveResponse.Merge(m, src)
}
func (m *MsgApproveResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgApproveResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgApproveResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgApproveResponse proto.InternalMessageInfo

type MsgRepayRequest struct {
	From   string `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty" yaml:"from"`
	LoanId uint64 `protobuf:"varint,2,opt,name=loan_id,json=loanId,proto3" json:"loan_id,omitempty" yaml:"loan_id"`
}

func (m *MsgRepayRequest) Reset()         { *m = MsgRepayRequest{} }
func (m *MsgRepayRequest) String() string { return proto.CompactTextString(m) }
func (*MsgRepayRequest) ProtoMessage()    {}
func (*MsgRepayRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e036425a4859ea3e, []int{4}
}
func (m *MsgRepayRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRepayRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRepayRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRepayRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRepayRequest.Merge(m, src)
}
func (m *MsgRepayRequest) XXX_Size() int {
	return m.Size()
}
func (m *MsgRepayRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRepayRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRepayRequest proto.InternalMessageInfo

func (m *MsgRepayRequest) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *MsgRepayRequest) GetLoanId() uint64 {
	if m != nil {
		return m.LoanId
	}
	return 0
}

type MsgRepayResponse struct {
}

func (m *MsgRepayResponse) Reset()         { *m = MsgRepayResponse{} }
func (m *MsgRepayResponse) String() string { return proto.CompactTextString(m) }
func (*MsgRepayResponse) ProtoMessage()    {}
func (*MsgRepayResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e036425a4859ea3e, []int{5}
}
func (m *MsgRepayResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRepayResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRepayResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRepayResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRepayResponse.Merge(m, src)
}
func (m *MsgRepayResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgRepayResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRepayResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRepayResponse proto.InternalMessageInfo

type MsgCancelRequest struct {
	From   string `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty" yaml:"from"`
	LoanId uint64 `protobuf:"varint,2,opt,name=loan_id,json=loanId,proto3" json:"loan_id,omitempty" yaml:"loan_id"`
}

func (m *MsgCancelRequest) Reset()         { *m = MsgCancelRequest{} }
func (m *MsgCancelRequest) String() string { return proto.CompactTextString(m) }
func (*MsgCancelRequest) ProtoMessage()    {}
func (*MsgCancelRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e036425a4859ea3e, []int{6}
}
func (m *MsgCancelRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCancelRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCancelRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCancelRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCancelRequest.Merge(m, src)
}
func (m *MsgCancelRequest) XXX_Size() int {
	return m.Size()
}
func (m *MsgCancelRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCancelRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCancelRequest proto.InternalMessageInfo

func (m *MsgCancelRequest) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *MsgCancelRequest) GetLoanId() uint64 {
	if m != nil {
		return m.LoanId
	}
	return 0
}

type MsgCancelResponse struct {
}

func (m *MsgCancelResponse) Reset()         { *m = MsgCancelResponse{} }
func (m *MsgCancelResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCancelResponse) ProtoMessage()    {}
func (*MsgCancelResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e036425a4859ea3e, []int{7}
}
func (m *MsgCancelResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCancelResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCancelResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCancelResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCancelResponse.Merge(m, src)
}
func (m *MsgCancelResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCancelResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCancelResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCancelResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgCreateRequest)(nil), "comdex.loan.v1beta1.MsgCreateRequest")
	proto.RegisterType((*MsgCreateResponse)(nil), "comdex.loan.v1beta1.MsgCreateResponse")
	proto.RegisterType((*MsgApproveRequest)(nil), "comdex.loan.v1beta1.MsgApproveRequest")
	proto.RegisterType((*MsgApproveResponse)(nil), "comdex.loan.v1beta1.MsgApproveResponse")
	proto.RegisterType((*MsgRepayRequest)(nil), "comdex.loan.v1beta1.MsgRepayRequest")
	proto.RegisterType((*MsgRepayResponse)(nil), "comdex.loan.v1beta1.MsgRepayResponse")
	proto.RegisterType((*MsgCancelRequest)(nil), "comdex.loan.v1beta1.MsgCancelRequest")
	proto.RegisterType((*MsgCancelResponse)(nil), "comdex.loan.v1beta1.MsgCancelResponse")
}

func init() { proto.RegisterFile("comdex/loan/v1beta1/tx.proto", fileDescriptor_e036425a4859ea3e) }

var fileDescriptor_e036425a4859ea3e = []byte{
	// 560 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x54, 0x41, 0x6f, 0xd3, 0x30,
	0x18, 0x6d, 0xd6, 0xae, 0x5d, 0x0d, 0x63, 0xab, 0xd7, 0x43, 0x54, 0xa1, 0xa4, 0x32, 0x6c, 0x54,
	0x9a, 0x96, 0x68, 0x70, 0x43, 0x70, 0xa0, 0xe3, 0x40, 0x0f, 0x05, 0x29, 0x17, 0xa4, 0x49, 0xa8,
	0x72, 0x13, 0x37, 0x44, 0x34, 0xb1, 0x89, 0x9d, 0x69, 0xfd, 0x17, 0xfc, 0xac, 0x1d, 0x77, 0x44,
	0x1c, 0x22, 0xd4, 0xfe, 0x83, 0x4a, 0xdc, 0x51, 0x6c, 0x97, 0xb5, 0x68, 0x5b, 0xd5, 0xc3, 0x4e,
	0xb1, 0xbf, 0xf7, 0xf2, 0x3d, 0xeb, 0x3d, 0x7f, 0x06, 0x4f, 0x7d, 0x1a, 0x07, 0xe4, 0xd2, 0x1d,
	0x53, 0x9c, 0xb8, 0x17, 0xa7, 0x43, 0x22, 0xf0, 0xa9, 0x2b, 0x2e, 0x1d, 0x96, 0x52, 0x41, 0xe1,
	0x81, 0x42, 0x9d, 0x02, 0x75, 0x34, 0xda, 0x6a, 0x86, 0x34, 0xa4, 0x12, 0x77, 0x8b, 0x95, 0xa2,
	0xa2, 0x69, 0x19, 0xec, 0xf7, 0x79, 0x78, 0x96, 0x12, 0x2c, 0x88, 0x47, 0xbe, 0x67, 0x84, 0x0b,
	0xf8, 0x0c, 0x54, 0x46, 0x29, 0x8d, 0x4d, 0xa3, 0x6d, 0x74, 0xea, 0xdd, 0xbd, 0x79, 0x6e, 0x3f,
	0x9a, 0xe0, 0x78, 0xfc, 0x1a, 0x15, 0x55, 0xe4, 0x49, 0x10, 0x76, 0x40, 0x15, 0x33, 0x36, 0x88,
	0x02, 0x73, 0xab, 0x6d, 0x74, 0x2a, 0xdd, 0xc6, 0x3c, 0xb7, 0x77, 0x15, 0x4d, 0xd5, 0x91, 0xb7,
	0x8d, 0x19, 0xeb, 0x05, 0xf0, 0x18, 0xd4, 0x18, 0x8e, 0xd2, 0x82, 0x5a, 0x96, 0x54, 0x38, 0xcf,
	0xed, 0x27, 0x8a, 0xaa, 0x01, 0xe4, 0x55, 0x8b, 0x55, 0x2f, 0x80, 0x03, 0x50, 0xc7, 0x31, 0xcd,
	0x12, 0x31, 0x88, 0x12, 0xb3, 0x22, 0x0f, 0xd0, 0xbd, 0xca, 0xed, 0xd2, 0xaf, 0xdc, 0x3e, 0x0a,
	0x23, 0xf1, 0x35, 0x1b, 0x3a, 0x3e, 0x8d, 0x5d, 0x9f, 0xf2, 0x98, 0x72, 0xfd, 0x39, 0xe1, 0xc1,
	0x37, 0x57, 0x4c, 0x18, 0xe1, 0x4e, 0x2f, 0x11, 0xf3, 0xdc, 0xde, 0xd7, 0xe7, 0x58, 0x34, 0x42,
	0xde, 0x8e, 0x5a, 0xf7, 0x12, 0x38, 0x04, 0x40, 0xd7, 0x69, 0x26, 0xcc, 0x6d, 0xa9, 0x70, 0xb6,
	0xb1, 0x42, 0x63, 0x45, 0x81, 0x66, 0x02, 0x79, 0xfa, 0xdc, 0x9f, 0x32, 0x01, 0x3f, 0x82, 0xf2,
	0x88, 0x10, 0xb3, 0x2a, 0x9b, 0xbf, 0xd9, 0xb8, 0x39, 0xd0, 0x6e, 0x13, 0x82, 0xbc, 0xa2, 0x11,
	0x7c, 0x0b, 0x76, 0x83, 0x2c, 0xc5, 0x22, 0xa2, 0xc9, 0x20, 0xc0, 0x13, 0x6e, 0xd6, 0xda, 0x46,
	0xa7, 0xdc, 0x35, 0xe7, 0xb9, 0xdd, 0x54, 0xdc, 0x15, 0x18, 0x79, 0x8f, 0x17, 0xfb, 0xf7, 0xc5,
	0xf6, 0x00, 0x34, 0x96, 0x32, 0xe6, 0x8c, 0x26, 0x9c, 0x20, 0x22, 0x8b, 0xef, 0x18, 0x4b, 0xe9,
	0xc5, 0x66, 0xc9, 0x1f, 0x83, 0x5a, 0x71, 0xb3, 0x6e, 0xa2, 0x5f, 0xca, 0x53, 0x03, 0xc8, 0xab,
	0x16, 0xab, 0x5e, 0x80, 0x9a, 0x00, 0x2e, 0xcb, 0x68, 0x71, 0x1f, 0xec, 0xf5, 0x79, 0xe8, 0x11,
	0x86, 0x27, 0x0f, 0x27, 0x0d, 0xe5, 0xd5, 0xd6, 0x22, 0x5a, 0x38, 0x50, 0xd7, 0x1d, 0x27, 0x3e,
	0x19, 0x3f, 0x9c, 0xb2, 0x36, 0x5c, 0xab, 0x28, 0xe9, 0x97, 0x7f, 0xb6, 0x40, 0xb9, 0xcf, 0x43,
	0x78, 0x0e, 0xea, 0xff, 0xd2, 0x80, 0x87, 0xce, 0x2d, 0xb3, 0xea, 0xfc, 0x3f, 0x91, 0xad, 0xa3,
	0x75, 0x34, 0xa5, 0x01, 0xbf, 0x00, 0x70, 0xe3, 0x36, 0xbc, 0xf3, 0xaf, 0xd5, 0xd4, 0x5b, 0x2f,
	0xd6, 0xf2, 0x74, 0xfb, 0xcf, 0x60, 0x67, 0xe1, 0x28, 0x7c, 0x7e, 0xd7, 0x4f, 0xcb, 0xa9, 0xb6,
	0x0e, 0xd7, 0xb0, 0x74, 0x63, 0xed, 0x89, 0x34, 0xec, 0x1e, 0x4f, 0x96, 0x63, 0xbb, 0xc7, 0x93,
	0x15, 0xdf, 0xbb, 0x1f, 0xae, 0xa6, 0x96, 0x71, 0x3d, 0xb5, 0x8c, 0xdf, 0x53, 0xcb, 0xf8, 0x31,
	0xb3, 0x4a, 0xd7, 0x33, 0xab, 0xf4, 0x73, 0x66, 0x95, 0xce, 0x9d, 0x95, 0x89, 0x2c, 0x7a, 0x9d,
	0xd0, 0xd1, 0x28, 0xf2, 0x23, 0x3c, 0xd6, 0x7b, 0x57, 0x3f, 0xb1, 0x72, 0x3a, 0x87, 0x55, 0xf9,
	0x66, 0xbe, 0xfa, 0x1b, 0x00, 0x00, 0xff, 0xff, 0x89, 0x0b, 0xed, 0x10, 0x7e, 0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	MsgCreate(ctx context.Context, in *MsgCreateRequest, opts ...grpc.CallOption) (*MsgCreateResponse, error)
	MsgApprove(ctx context.Context, in *MsgApproveRequest, opts ...grpc.CallOption) (*MsgApproveResponse, error)
	MsgRepay(ctx context.Context, in *MsgRepayRequest, opts ...grpc.CallOption) (*MsgRepayResponse, error)
	MsgCancel(ctx context.Context, in *MsgCancelRequest, opts ...grpc.CallOption) (*MsgCancelResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) MsgCreate(ctx context.Context, in *MsgCreateRequest, opts ...grpc.CallOption) (*MsgCreateResponse, error) {
	out := new(MsgCreateResponse)
	err := c.cc.Invoke(ctx, "/comdex.loan.v1beta1.Msg/MsgCreate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) MsgApprove(ctx context.Context, in *MsgApproveRequest, opts ...grpc.CallOption) (*MsgApproveResponse, error) {
	out := new(MsgApproveResponse)
	err := c.cc.Invoke(ctx, "/comdex.loan.v1beta1.Msg/MsgApprove", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) MsgRepay(ctx context.Context, in *MsgRepayRequest, opts ...grpc.CallOption) (*MsgRepayResponse, error) {
	out := new(MsgRepayResponse)
	err := c.cc.Invoke(ctx, "/comdex.loan.v1beta1.Msg/MsgRepay", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) MsgCancel(ctx context.Context, in *MsgCancelRequest, opts ...grpc.CallOption) (*MsgCancelResponse, error) {
	out := new(MsgCancelResponse)
	err := c.cc.Invoke(ctx, "/comdex.loan.v1beta1.Msg/MsgCancel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	MsgCreate(context.Context, *MsgCreateRequest) (*MsgCreateResponse, error)
	MsgApprove(context.Context, *MsgApproveRequest) (*MsgApproveResponse, error)
	MsgRepay(context.Context, *MsgRepayRequest) (*MsgRepayResponse, error)
	MsgCancel(context.Context, *MsgCancelRequest) (*MsgCancelResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) MsgCreate(ctx context.Context, req *MsgCreateRequest) (*MsgCreateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MsgCreate not implemented")
}
func (*UnimplementedMsgServer) MsgApprove(ctx context.Context, req *MsgApproveRequest) (*MsgApproveResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MsgApprove not implemented")
}
func (*UnimplementedMsgServer) MsgRepay(ctx context.Context, req *MsgRepayRequest) (*MsgRepayResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MsgRepay not implemented")
}
func (*UnimplementedMsgServer) MsgCancel(ctx context.Context, req *MsgCancelRequest) (*MsgCancelResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MsgCancel not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_MsgCreate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).MsgCreate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/comdex.loan.v1beta1.Msg/MsgCreate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).MsgCreate(ctx, req.(*MsgCreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_MsgApprove_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgApproveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).MsgApprove(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/comdex.loan.v1beta1.Msg/MsgApprove",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).MsgApprove(ctx, req.(*MsgApproveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_MsgRepay_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgRepayRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).MsgRepay(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/comdex.loan.v1beta1.Msg/MsgRepay",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).MsgRepay(ctx, req.(*MsgRepayRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_MsgCancel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCancelRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).MsgCancel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/comdex.loan.v1beta1.Msg/MsgCancel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).MsgCancel(ctx, req.(*MsgCancelRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "comdex.loan.v1beta1.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "MsgCreate",
			Handler:    _Msg_MsgCreate_Handler,
		},
		{
			MethodName: "MsgApprove",
			Handler:    _Msg_MsgApprove_Handler,
		},
		{
			MethodName: "MsgRepay",
			Handler:    _Msg_MsgRepay_Handler,
		},
		{
			MethodName: "MsgCancel",
			Handler:    _Msg_MsgCancel_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "comdex/loan/v1beta1/tx.proto",
}

func (m *MsgCreateRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.DurationDays != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.DurationDays))
		i--
		dAtA[i] = 0x38
	}
	{
		size := m.Fee.Size()
		i -= size
		if _, err := m.Fee.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x32
	{
		size := m.AmountOut.Size()
		i -= size
		if _, err := m.AmountOut.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x2a
	{
		size := m.AmountIn.Size()
		i -= size
		if _, err := m.AmountIn.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x22
	if m.PairId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.PairId))
		i--
		dAtA[i] = 0x18
	}
	if m.AppId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.AppId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.From) > 0 {
		i -= len(m.From)
		copy(dAtA[i:], m.From)
		i = encodeVarintTx(dAtA, i, uint64(len(m.From)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgApproveRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgApproveRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgApproveRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.LoanId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.LoanId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.From) > 0 {
		i -= len(m.From)
		copy(dAtA[i:], m.From)
		i = encodeVarintTx(dAtA, i, uint64(len(m.From)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgApproveResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgApproveResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgApproveResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgRepayRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRepayRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRepayRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.LoanId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.LoanId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.From) > 0 {
		i -= len(m.From)
		copy(dAtA[i:], m.From)
		i = encodeVarintTx(dAtA, i, uint64(len(m.From)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgRepayResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRepayResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRepayResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCancelRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCancelRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCancelRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.LoanId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.LoanId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.From) > 0 {
		i -= len(m.From)
		copy(dAtA[i:], m.From)
		i = encodeVarintTx(dAtA, i, uint64(len(m.From)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCancelResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCancelResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCancelResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgCreateRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.From)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.AppId != 0 {
		n += 1 + sovTx(uint64(m.AppId))
	}
	if m.PairId != 0 {
		n += 1 + sovTx(uint64(m.PairId))
	}
	l = m.AmountIn.Size()
	n += 1 + l + sovTx(uint64(l))
	l = m.AmountOut.Size()
	n += 1 + l + sovTx(uint64(l))
	l = m.Fee.Size()
	n += 1 + l + sovTx(uint64(l))
	if m.DurationDays != 0 {
		n += 1 + sovTx(uint64(m.DurationDays))
	}
	return n
}

func (m *MsgCreateResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgApproveRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.From)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.LoanId != 0 {
		n += 1 + sovTx(uint64(m.LoanId))
	}
	return n
}

func (m *MsgApproveResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgRepayRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.From)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.LoanId != 0 {
		n += 1 + sovTx(uint64(m.LoanId))
	}
	return n
}

func (m *MsgRepayResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCancelRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.From)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.LoanId != 0 {
		n += 1 + sovTx(uint64(m.LoanId))
	}
	return n
}

func (m *MsgCancelResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgCreateRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field From", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.From = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AppId", wireType)
			}
			m.AppId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.AppId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PairId", wireType)
			}
			m.PairId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PairId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AmountIn", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.AmountIn.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AmountOut", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.AmountOut.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Fee", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Fee.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DurationDays", wireType)
			}
			m.DurationDays = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.DurationDays |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgApproveRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgApproveRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgApproveRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field From", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.From = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LoanId", wireType)
			}
			m.LoanId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LoanId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgApproveResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgApproveResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgApproveResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRepayRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRepayRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRepayRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field From", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.From = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LoanId", wireType)
			}
			m.LoanId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LoanId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRepayResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRepayResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRepayResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCancelRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCancelRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCancelRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field From", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.From = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LoanId", wireType)
			}
			m.LoanId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LoanId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCancelResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCancelResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCancelResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
